const pokemonRepository = (function() {
  const t = [],
    n = "https://pokeapi.co/api/v2/pokemon/?limit=150";
  function e(n) {
    if (
      ((e = n),
      (o = 2),
      "[object Object]" !== Object.prototype.toString.call(e) ||
        Object.keys(e).length !== o)
    )
      throw "Invaid Entry";
    var e, o;
    t.push(n);
  }
  function o(t, n, e, o, i) {
    $("#pokemon-title").text(t),
      $(".modal-body")
        .empty()
        .append('<img class="pokemon-image" />')
        .append('<p id="pokemon-height">Height: ' + n + "</p>")
        .append('<p id="pokemon-weight">Weight: ' + o + "</p>")
        .append('<p id="pokemon-types">Type: ' + i + "</p>"),
      $(".pokemon-image").attr("src", e);
  }
  function i(t) {
    pokemonRepository.loadDetails(t).then(function() {
      o(t.name, t.height, t.imgUrl, t.weight, t.types);
    });
  }
  function s(t) {
    t
      ? ($spinner.addClass("is-loading"),
        $spinner.removeClass("is-not-loading"))
      : ($spinner.addClass("is-not-loading"),
        $spinner.removeClass("not-loading"));
  }
  return {
    add: e,
    getAll: function() {
      return t;
    },
    addListItem: function(t) {
      ($listItem = $(
        '<button type="button" class="list-group-item pokemon-button title" data-toggle="modal" data-target="#pokemon-modal"></button>',
      )),
        $listItem.text(t.name),
        $pokemonList.append($listItem),
        $listItem.click(function() {
          i(t);
        });
    },
    showDetails: i,
    loadList: function() {
      return (
        s(!0),
        fetch(n)
          .then(function(t) {
            return t.json();
          })
          .then(function(t) {
            t.results.forEach(function(t) {
              e({ name: t.name, detailsUrl: t.url });
            }),
              s(!1);
          })
          .catch(function(t) {
            console.error(t), s(!1);
          })
      );
    },
    loadDetails: function(t) {
      var n = t.detailsUrl;
      return (
        s(!0),
        fetch(n)
          .then(function(t) {
            return t.json();
          })
          .then(function(n) {
            (t.imgUrl = n.sprites.front_default),
              (t.height = n.height),
              (t.types = n.types.map(function(t) {
                return t.type.name;
              })),
              (t.weight = n.weight),
              s(!1);
          })
          .catch(function(t) {
            console.error(t), s(!1);
          })
      );
    },
    showModal: o,
  };
})();
var $pokemonList = $("#pokemon-list"),
  $spinner = $("#spinner");
pokemonRepository.loadList().then(function() {
  pokemonRepository.getAll().forEach(function(t) {
    pokemonRepository.addListItem(t);
  });
});
